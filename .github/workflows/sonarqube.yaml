name: SonarQube Code Analysis

on:
  #pull_request:
  #  branches:
  #    - develop
  #  types:
  #    - opened
  #    - synchronize
  #    - reopened
  #workflow_dispatch:  # Allows manual trigger
  workflow_call:
    inputs:
      projectKey:
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      AWS_ACCESS_KEY:
        required: true
      AWS_SECRET_KEY:
        required: true
      
jobs:
  sonar:
    #if: startsWith(github.head_ref, 'feature/')  # Runs only if PR is from `feature/**`
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1 # Change to your AWS region

      - name: Authenticate with AWS CodeArtifact
        run: |
          export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain demo --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} --query authorizationToken --output text)
          
          aws codeartifact login --tool npm --repository node --domain demo --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} --region us-east-1

          echo "@gwl:registry=https://demo-${{ secrets.AWS_ACCOUNT_ID }}.d.codeartifact.us-east-1.amazonaws.com/npm/node/" > ~/.npmrc
          echo "//demo-${{ secrets.AWS_ACCOUNT_ID }}.d.codeartifact.us-east-1.amazonaws.com/npm/node/:_authToken=$CODEARTIFACT_AUTH_TOKEN" >> ~/.npmrc
          echo "AWS CodeArtifact Authentication Configured"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          
      - name: Install Dependencies
        run: npm install

      #- name: Run tests
      #  run: npm test

      - name: Run SonarQube Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarqube.dandsltd.com"
        run: |
          npm install -g sonarqube-scanner
          sonar-scanner \
            -Dsonar.projectKey=${{ inputs.projectKey }} \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.token=$SONAR_TOKEN #\
            #-Dsonar.pullrequest.key=${{ github.event.pull_request.number }} \
            #-Dsonar.pullrequest.branch=${{ github.head_ref }} \
            #-Dsonar.pullrequest.base=${{ github.base_ref }} \
            #-Dsonar.pullrequest.github.repository=${{ github.repository }}
